{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chrix\\\\OneDrive\\\\Documents\\\\Python\\\\Misky FastApi\\\\frontend\\\\src\\\\components\\\\CustomerDashboard.js\",\n  _s = $RefreshSig$();\n//NOTES: CustomerDashboard.js goes through fastAPI backend, doesn't talk directly to Supabase\n\nimport { useEffect, useState } from \"react\"; //useEffect: runs side-effects (e.g., fetching data after component mounts), useState: allows you to create reactive variables (items, loading, etc.)\nimport { supabase } from \"./supabaseClient\"; //initialize Supabase client, used to get the user session and token\nimport { fetchItems, fetchReservations, createReservation } from \"../api\"; //helper functions that make HTTP requests to FastAPI backend\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomerDashboard({\n  user\n}) {\n  _s();\n  //main react component\n  //state setup\n  const [items, setItems] = useState([]); //food items pulled from the backend\n  const [reservations, setReservations] = useState([]); //current user’s reservations\n  const [loading, setLoading] = useState(false); //loading tracks if app is currently fetching data\n  const [error, setError] = useState(\"\"); //error messaging if error encountered during processes\n\n  // Load available items from backend\n  const loadItems = async () => {\n    try {\n      const data = await fetchItems(supabase); //HTTP request to your backend (using Supabase for token)\n      setItems(data); //data is set to items state\n      setError(\"\");\n    } catch (err) {\n      //handle errors\n      console.error(err);\n      setError(err.message || \"Failed to load items.\");\n    }\n  };\n\n  // Load user reservations\n  const loadReservations = async () => {\n    try {\n      if (!(user !== null && user !== void 0 && user.id)) {\n        //If no user is logged in, don’t try to fetch reservations\n        setReservations([]);\n        return;\n      }\n      const data = await fetchReservations(supabase); //HTTP request to your backend (using Supabase for token)\n      setReservations(data);\n      setError(\"\");\n    } catch (err) {\n      //handle errors\n      console.error(err);\n      setError(err.message || \"Failed to load your reservations.\");\n    }\n  };\n  useEffect(() => {\n    loadItems();\n  }, []); //Run loadItems() when the component first mounts (empty [] dependency)\n\n  useEffect(() => {\n    loadReservations();\n  }, [user === null || user === void 0 ? void 0 : user.id]); //Re-fetch reservations when the user logs in or changes\n\n  // Make a reservation\n  const reserve = async item_id => {\n    // Called when the user clicks the Reserve button for a food item\n    if (!(user !== null && user !== void 0 && user.id)) {\n      //check to prevent unauthorized access\n      alert(\"You are not logged in.\");\n      return;\n    }\n    setLoading(true);\n    setError(\"\");\n    try {\n      //Build a payload object to send to backend\n      const payload = {\n        customer_id: user.id,\n        item_id,\n        timestamp: new Date().toISOString(),\n        status: \"active\"\n      };\n\n      //createReservation() sends a POST to your FastAPI backend with a bearer token\n      await createReservation(supabase, payload);\n      alert(\"Reservation created!\"); //success popup\n\n      //Re-fetch reservations and item counts to reflect the new state (update whats shown on dashboard)\n      await loadReservations();\n      await loadItems();\n\n      // handle errors\n    } catch (err) {\n      console.error(err);\n      setError(err.message || \"Failed to create reservation.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  // UI/HTML Portion\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Customer Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Processing reservation\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Available Food Offers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), items.filter(item => item.total_spots - (item.num_of_reservations || 0) > 0).length === 0 ?\n    /*#__PURE__*/\n    //Filters out items with full reservations\n    _jsxDEV(\"p\", {\n      children: \"No available food offers at the moment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.filter(item => item.total_spots - (item.num_of_reservations || 0) > 0).map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: \"0.5rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: item.information\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), \" \\u2014\", \" \", new Date(item.pickup_time).toLocaleString(), \" \\u2014 $\", item.price.toFixed(2), \" \\u2014 spots:\", \" \", item.total_spots - (item.num_of_reservations || 0), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 70\n        }, this), \"Location: \", item.location, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: loading,\n          onClick: () => reserve(item.id),\n          children: \"Reserve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Reservations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), reservations.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You have no reservations yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: reservations.map(r => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: \"0.5rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: r.item.information\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this), \" \\u2014\", \" \", new Date(r.item.pickup_time).toLocaleString(), \" \\u2014 $\", r.item.price.toFixed(2), \" \\u2014 Status: \", r.status, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 62\n        }, this), \"Location: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: r.item.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 60\n        }, this)]\n      }, r.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomerDashboard, \"L6fi1Akpi9vZy0FU+6lgt4TkjGc=\");\n_c = CustomerDashboard;\nvar _c;\n$RefreshReg$(_c, \"CustomerDashboard\");","map":{"version":3,"names":["useEffect","useState","supabase","fetchItems","fetchReservations","createReservation","jsxDEV","_jsxDEV","CustomerDashboard","user","_s","items","setItems","reservations","setReservations","loading","setLoading","error","setError","loadItems","data","err","console","message","loadReservations","id","reserve","item_id","alert","payload","customer_id","timestamp","Date","toISOString","status","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","filter","item","total_spots","num_of_reservations","length","map","marginBottom","information","pickup_time","toLocaleString","price","toFixed","location","disabled","onClick","r","_c","$RefreshReg$"],"sources":["C:/Users/chrix/OneDrive/Documents/Python/Misky FastApi/frontend/src/components/CustomerDashboard.js"],"sourcesContent":["//NOTES: CustomerDashboard.js goes through fastAPI backend, doesn't talk directly to Supabase\r\n\r\n\r\nimport { useEffect, useState } from \"react\"; //useEffect: runs side-effects (e.g., fetching data after component mounts), useState: allows you to create reactive variables (items, loading, etc.)\r\nimport { supabase } from \"./supabaseClient\"; //initialize Supabase client, used to get the user session and token\r\nimport { fetchItems, fetchReservations, createReservation } from \"../api\"; //helper functions that make HTTP requests to FastAPI backend\r\n\r\nexport default function CustomerDashboard({ user }) { //main react component\r\n  //state setup\r\n  const [items, setItems] = useState([]); //food items pulled from the backend\r\n  const [reservations, setReservations] = useState([]); //current user’s reservations\r\n  const [loading, setLoading] = useState(false); //loading tracks if app is currently fetching data\r\n  const [error, setError] = useState(\"\"); //error messaging if error encountered during processes\r\n\r\n  // Load available items from backend\r\n  const loadItems = async () => {\r\n    try {\r\n      const data = await fetchItems(supabase); //HTTP request to your backend (using Supabase for token)\r\n      setItems(data); //data is set to items state\r\n      setError(\"\");\r\n    } catch (err) {\r\n      //handle errors\r\n      console.error(err);\r\n      setError(err.message || \"Failed to load items.\");\r\n    }\r\n  };\r\n\r\n  // Load user reservations\r\n  const loadReservations = async () => {\r\n    try {\r\n      if (!user?.id) { //If no user is logged in, don’t try to fetch reservations\r\n        setReservations([]);\r\n        return;\r\n      }\r\n      const data = await fetchReservations(supabase); //HTTP request to your backend (using Supabase for token)\r\n      setReservations(data);\r\n      setError(\"\");\r\n    } catch (err) {\r\n      //handle errors\r\n      console.error(err);\r\n      setError(err.message || \"Failed to load your reservations.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadItems(); \r\n  }, []); //Run loadItems() when the component first mounts (empty [] dependency)\r\n\r\n  useEffect(() => {\r\n    loadReservations();\r\n  }, [user?.id]); //Re-fetch reservations when the user logs in or changes\r\n\r\n  // Make a reservation\r\n  const reserve = async (item_id) => { // Called when the user clicks the Reserve button for a food item\r\n    if (!user?.id) { //check to prevent unauthorized access\r\n      alert(\"You are not logged in.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n\r\n      //Build a payload object to send to backend\r\n      const payload = {\r\n        customer_id: user.id,\r\n        item_id,\r\n        timestamp: new Date().toISOString(),\r\n        status: \"active\",\r\n      };\r\n\r\n      //createReservation() sends a POST to your FastAPI backend with a bearer token\r\n      await createReservation(supabase, payload); \r\n\r\n      alert(\"Reservation created!\"); //success popup\r\n\r\n      //Re-fetch reservations and item counts to reflect the new state (update whats shown on dashboard)\r\n      await loadReservations(); \r\n      await loadItems();\r\n\r\n    // handle errors\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError(err.message || \"Failed to create reservation.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n// UI/HTML Portion\r\n  return (\r\n    <div>\r\n      <h2>Customer Dashboard</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      {loading && <p>Processing reservation…</p>}\r\n\r\n      <h3>Available Food Offers</h3>\r\n      {items.filter((item) => (item.total_spots - (item.num_of_reservations || 0)) > 0).length === 0 ? ( //Filters out items with full reservations\r\n        <p>No available food offers at the moment.</p>\r\n      ) : (\r\n        <ul>\r\n          {items\r\n            .filter((item) => (item.total_spots - (item.num_of_reservations || 0)) > 0)\r\n            .map((item) => (\r\n              <li key={item.id} style={{ marginBottom: \"0.5rem\" }}>\r\n                <strong>{item.information}</strong> —{\" \"}\r\n                {new Date(item.pickup_time).toLocaleString()} — $\r\n                {item.price.toFixed(2)} — spots:{\" \"}\r\n                {item.total_spots - (item.num_of_reservations || 0)} <br />\r\n                Location: {item.location} <br />\r\n                <button disabled={loading} onClick={() => reserve(item.id)}>\r\n                  Reserve\r\n                </button>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      )}\r\n\r\n      <h3>Your Reservations</h3> \r\n      {reservations.length === 0 ? (\r\n        <p>You have no reservations yet.</p>\r\n      ) : (\r\n        <ul>\r\n          {reservations.map((r) => (\r\n            <li key={r.id} style={{ marginBottom: \"0.5rem\" }}>\r\n              <strong>{r.item.information}</strong> —{\" \"}\r\n              {new Date(r.item.pickup_time).toLocaleString()} — $\r\n              {r.item.price.toFixed(2)} — Status: {r.status} <br />\r\n              Location: <strong>{r.item.location}</strong> <br />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}