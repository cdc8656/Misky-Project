{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chrix\\\\OneDrive\\\\Documents\\\\Python\\\\Misky FastApi\\\\frontend\\\\src\\\\components\\\\AuthForm.js\",\n  _s = $RefreshSig$();\n// src/components/AuthForm.js\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthForm({\n  supabase,\n  type\n}) {\n  _s();\n  const isLogin = type === \"login\";\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setErrorMsg(\"\");\n    try {\n      if (isLogin) {\n        const {\n          error\n        } = await supabase.auth.signInWithPassword({\n          email,\n          password\n        });\n        if (error) throw error;\n      } else {\n        const {\n          error\n        } = await supabase.auth.signUp({\n          email,\n          password,\n          options: {\n            data: {\n              name\n            }\n          }\n        });\n        if (error) throw error;\n      }\n    } catch (error) {\n      setErrorMsg(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [!isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      children: loading ? \"Loading...\" : isLogin ? \"Login\" : \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), errorMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthForm, \"2GNJInR4Mu0xf8XrAXj4nYkxRz4=\");\n_c = AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AuthForm","supabase","type","_s","isLogin","email","setEmail","password","setPassword","name","setName","loading","setLoading","errorMsg","setErrorMsg","handleSubmit","e","preventDefault","error","auth","signInWithPassword","signUp","options","data","message","onSubmit","children","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","required","disabled","style","color","_c","$RefreshReg$"],"sources":["C:/Users/chrix/OneDrive/Documents/Python/Misky FastApi/frontend/src/components/AuthForm.js"],"sourcesContent":["// src/components/AuthForm.js\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function AuthForm({ supabase, type }) {\r\n  const isLogin = type === \"login\";\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setErrorMsg(\"\");\r\n\r\n    try {\r\n      if (isLogin) {\r\n        const { error } = await supabase.auth.signInWithPassword({ email, password });\r\n        if (error) throw error;\r\n      } else {\r\n        const { error } = await supabase.auth.signUp({\r\n          email,\r\n          password,\r\n          options: {\r\n            data: { name }\r\n          }\r\n        });\r\n        if (error) throw error;\r\n      }\r\n    } catch (error) {\r\n      setErrorMsg(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {!isLogin && (\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      )}\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        required\r\n      />\r\n      <button type=\"submit\" disabled={loading}>\r\n        {loading ? \"Loading...\" : isLogin ? \"Login\" : \"Register\"}\r\n      </button>\r\n      {errorMsg && <p style={{ color: \"red\" }}>{errorMsg}</p>}\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}